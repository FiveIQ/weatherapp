{"version":3,"sources":["apis/weather.js","actions/index.js","components/Card.js","components/Hourly.js","components/Search.js","components/App.js","reducers/index.js","reducers/mainreducer.js","index.js"],"names":["axios","create","baseURL","params","appid","units","fetch5dayforecast","latitude","longitude","dispatch","a","weather","get","lat","lon","response","console","log","type","payload","data","daily","fetchhourly","list","fetchlocation","city","Card","this","props","date","Date","day","getDay","detailedday","getDate","month","getMonth","weekday","Array","hourlydata","monthcounter","dt_txt","substr","weekdaycounter","weatherdata","map","index","className","renderdate","temp","max","String","fromCharCode","min","description","dt","location","name","country","style","display","justifyContent","renderlocation","width","rendercards","React","Component","cardcomponent","connect","state","Object","values","mainreducer","hourlyreducer","locationreducer","Hourly","main","temp_min","renderhourly","hourlycomponent","SearchForm","renderInput","formProps","meta","error","touched","label","input","autoComplete","renderError","onSubmit","formValues","handleSubmit","Field","component","Search","reduxForm","form","validate","errors","searchcomponent","App","combineReducers","action","_","mapKeys","reducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.49a916cd.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst KEY = \"15fa71971dd18bcbf15877023a801f54\";\n\nexport default axios.create({\n    baseURL: 'https://api.openweathermap.org/data/2.5',\n    params: {\n        appid: KEY,\n        units: 'metric'\n    }\n});\n\n","import weather from '../apis/weather.js';\n\nexport const fetch5dayforecast = (latitude, longitude) => async dispatch =>{\n    const response = await weather.get('/onecall', {params: {lat: latitude, lon: longitude}});\n    \n    console.log(response);\n    dispatch( {\n        type: \"LIST_FORECAST\",\n        payload: response.data.daily\n    });\n};\n\nexport const fetchhourly = (latitude, longitude) => async dispatch =>{\n\n    const response = await weather.get('/forecast', {params: {lat: latitude, lon: longitude}});\n    console.log(response);\n    dispatch( {\n        type: \"LIST_HOURLY\",\n        payload: response.data.list\n    });\n};\n\nexport const fetchlocation = (latitude, longitude) => async dispatch =>{\n    const response = await weather.get('/forecast', {params: {lat: latitude, lon: longitude}});\n\n    dispatch( {\n        type: \"FETCH_LOCATION\",\n        payload: response.data.city\n    });\n};","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {fetch5dayforecast, fetchhourly, fetchlocation} from '../actions/index.js'\n\n\nclass Card extends React.Component {\n    componentDidMount(){\n        this.props.fetch5dayforecast(40.7128, -74.0060);\n        this.props.fetchhourly(40.7128, -74.0060);\n        this.props.fetchlocation(40.7128, -74.0060);\n        \n        this.date = new Date();\n        this.day = this.date.getDay();\n        this.detailedday = this.date.getDate();\n        this.month = this.date.getMonth();\n\n        this.weekday = new Array(7);\n        this.weekday[0] = \"Sunday\";\n        this.weekday[1] = \"Monday\";\n        this.weekday[2] = \"Tuesday\";\n        this.weekday[3] = \"Wednesday\";\n        this.weekday[4] = \"Thursday\";\n        this.weekday[5] = \"Friday\";\n        this.weekday[6] = \"Saturday\";\n    };\n    renderdate(){\n        let temp = this.props.hourlydata[0+this.monthcounter].dt_txt;\n        return temp.substr(0,10); //remove the time off the dates\n    }\n    rendercards(){\n        this.weekdaycounter = -1\n        this.monthcounter = -8\n        if (!this.props.weatherdata[0]) {return null;} //prevents calling while api is not loaded\n        if (!this.props.hourlydata[0]) {return null;}\n\n        return  this.props.weatherdata.map((data,index) => {\n            if (index >4){return null;} //only render 5 days\n        \n            this.weekdaycounter++; //cycles the days by 1\n            if (this.weekdaycounter+this.day >6){this.day = -1*this.weekdaycounter;} //simple algorithm to cycle through array of days\n\n            this.monthcounter = this.monthcounter + 8; //cycles the date by 24 hours\n\n            return(\n            <div key = {data.dt} className=\"card\">\n                <div className = \"content\">\n\n                    <div className = \"center aligned header\">\n                        {this.weekday[this.day+this.weekdaycounter]}\n                    </div>\n\n                    <div className=\"center aligned description\">\n                        {this.renderdate()}\n                        <br />\n                        <br />\n                    </div>\n\n                    <div className = \"center aligned header\">\n                        {`High: ${data.temp.max} ${String.fromCharCode(176)}C`}\n                        <br />\n                        {`Low: ${data.temp.min} ${String.fromCharCode(176)}C`}\n                    </div>    \n\n                    <div className=\"center aligned description\">\n                        {data.weather[0].description}\n                    </div>\n\n                </div>\n            </div>\n            );\n        });\n        \n    };\n    renderlocation(){\n        if (!this.props.location.location) {return null;}\n\n        return `${this.props.location.location.name}, ${this.props.location.location.country}`;\n\n    };\n\n    render(){\n        return (\n            <div style= {{display: \"flex\", justifyContent: \"center\"}}>\n\n                <div>\n                    {this.renderlocation()}\n                </div>\n\n                <div style= {{width: \"70%\" }}>\n                    <div className = \"ui five doubling cards centered\">\n                        {this.rendercards()}\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        weatherdata: Object.values(state.mainreducer),\n        hourlydata: Object.values(state.hourlyreducer),\n        location: state.locationreducer\n    };\n};\n\nconst cardcomponent = connect(mapStateToProps, {fetchlocation, fetch5dayforecast, fetchhourly})(Card);\nexport default cardcomponent;","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {fetchhourly} from '../actions/index.js'\n\nclass Hourly extends React.Component {\n    componentDidMount(){\n        this.props.fetchhourly(40.7128, -74.0060);\n    };\n\n    renderhourly(){\n        if (!this.props.hourlydata[0]) {return null;} //prevents calling while api is not loaded\n        \n        return  this.props.hourlydata.map(data => (data.main.temp_min));\n        \n    };\n\n    render(){\n        return (\n            <div>\n                hourly\n                {this.renderhourly()}\n            </div>\n        );\n    };\n\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        hourlydata: Object.values(state.hourlyreducer)\n    };\n};\n\nconst hourlycomponent = connect(mapStateToProps, {fetchhourly})(Hourly);\nexport default hourlycomponent;","import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {connect} from 'react-redux';\n\nimport {fetch5dayforecast, fetchhourly, fetchlocation} from '../actions/index.js'\n\n\nclass SearchForm extends React.Component {\n    renderError(meta) {\n        if (meta.touched && meta.error){\n            return (\n                <div className = \"ui error message\">\n                    <div className = \"header\">{meta.error}</div>\n                </div>\n            );\n        }\n\n    };\n\n\n    renderInput = (formProps) => {\n        const className = `field ${formProps.meta.error && formProps.meta.touched ? 'error' : ''}`;\n        return (\n            <div className = {className}>\n                <label>{formProps.label}</label>\n                <input {...formProps.input} autoComplete = \"off\"/>\n                {this.renderError(formProps.meta)}\n            </div>\n        );\n    };\n\n    onSubmit = (formValues) => {\n        this.props.fetchhourly(formValues.latitude, formValues.longitude);\n        this.props.fetch5dayforecast(formValues.latitude, formValues.longitude);\n        this.props.fetchlocation(formValues.latitude, formValues.longitude);\n    };\n\n    render(){\n        return (\n            <form onSubmit = {this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n                <Field name = \"latitude\" component = {this.renderInput} label = \"Enter Latitude\"/>\n                <Field name = \"longitude\" component = {this.renderInput} label = \"Enter Longitude\"/>\n                <button className = \"ui button primary\">Submit</button>\n            </form>\n        );\n    };\n\n};\n\nconst validate = (formValues) =>{\n    const errors = {};\n\n    if (!formValues.latitude){\n        errors.latitude = \"Enter a Latitude\"\n    }\n    if (!formValues.longitude){\n        errors.longitude = \"Enter a Longitude\"\n    }\n\n    return errors;\n};\n\nconst Search =  reduxForm({form: 'streamForm', validate})(SearchForm);\nconst searchcomponent = connect(null, {fetchlocation, fetch5dayforecast, fetchhourly})(Search);\n\nexport default searchcomponent;","import React from 'react';\n\nimport Card from './Card.js';\nimport Hourly from './Hourly.js';\nimport Search from './Search.js';\n\nconst App = () =>{\n\n\n\n    return (\n    <div>\n        <Search />\n        <Hourly />\n        <Card />\n    </div>\n    );\n};\n\nexport default App;","import {combineReducers} from 'redux';\nimport {reducer} from 'redux-form';\n\nimport {mainreducer, hourlyreducer, locationreducer} from './mainreducer.js';\n\n\nexport default combineReducers({\n    mainreducer: mainreducer,\n    hourlyreducer: hourlyreducer,\n    form: reducer,\n    locationreducer: locationreducer\n});","import _ from 'lodash'\n\nexport const mainreducer = (state = {}, action) =>{\n    switch(action.type){\n        case \"LIST_FORECAST\":\n            return {...state, ..._.mapKeys(action.payload, 'dt')};\n\n        default:\n            return state;\n    };\n};\n\nexport const hourlyreducer = (state = {}, action) =>{\n    switch(action.type){\n        case \"LIST_HOURLY\":\n            return {...state, ..._.mapKeys(action.payload, 'dt')};\n\n        default:\n            return state;\n    };\n};\n\nexport const locationreducer = (state = {}, action) =>{\n    switch(action.type){\n        case \"FETCH_LOCATION\":\n            return {...state, \"location\": action.payload};\n\n        default:\n            return state;\n    };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\n\nReactDOM.render(\n    <Provider store = {store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n);"],"sourceRoot":""}